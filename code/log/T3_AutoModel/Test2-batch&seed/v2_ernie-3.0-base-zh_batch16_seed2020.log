2022-10-19 09:40:38 - INFO - Training/evaluation parameters: Namespace(adam_eps=1e-06, adam_lr=5e-05, base_url='../data/tnews_public/', bert_cache='../config/ernie-3.0-base-zh', bert_dim=768, bert_dir='nghuyong/ernie-3.0-base-zh', bert_max_length=512, bert_padding='max_length', best_score=0.5, ckpt_file='save/BD/v13/model_.bin', data_path='../data/Toursim3.csv', device='cuda', dropout=0.1, log_file='log/BD/v13.log', lstm_batch_first=True, lstm_bidirectional=True, lstm_dropout=0.0, lstm_hidden_size=256, lstm_input_size=768, lstm_num_layers=2, lstm_reflector_size=256, max_epochs=10, max_steps=50000, n_gpu=1, num_class=3, num_workers=6, prefetch=12, print_steps=10, savedmodel_path='save/BD/v13', seed=2020, smoothing=0.0, stopWords='../stopword/hit_stopwords.txt', train_batch_size=16, val_batch_size=16, val_ratio=0.2, warmup_steps=1000, weight_decay=0.001, word2Vec='../word2vec/sgns.weibo.bigram-char.bz2', word2Vec_dim=300)
Some weights of the model checkpoint at nghuyong/ernie-3.0-base-zh were not used when initializing ErnieModel: ['cls.predictions.transform.dense.bias', 'cls.predictions.bias', 'cls.predictions.transform.LayerNorm.weight', 'cls.predictions.transform.LayerNorm.bias', 'cls.predictions.transform.dense.weight']
- This IS expected if you are initializing ErnieModel from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing ErnieModel from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
2022-10-19 09:43:07 - INFO - Epoch 0 step 348: loss 0.414, {'accuracy': 0.8221, 'f1': 0.8161, 'precision': 0.8146, 'recall': 0.8221}
2022-10-19 09:45:28 - INFO - Epoch 1 step 696: loss 0.423, {'accuracy': 0.8235, 'f1': 0.8238, 'precision': 0.8271, 'recall': 0.8235}
2022-10-19 09:47:50 - INFO - Epoch 2 step 1044: loss 0.431, {'accuracy': 0.8228, 'f1': 0.8156, 'precision': 0.815, 'recall': 0.8228}
2022-10-19 09:50:11 - INFO - Epoch 3 step 1392: loss 0.486, {'accuracy': 0.8278, 'f1': 0.8224, 'precision': 0.8225, 'recall': 0.8278}
2022-10-19 09:52:32 - INFO - Epoch 4 step 1740: loss 0.511, {'accuracy': 0.8314, 'f1': 0.818, 'precision': 0.825, 'recall': 0.8314}
Traceback (most recent call last):
  File "main.py", line 99, in <module>
    main()
  File "main.py", line 96, in main
    train_and_validate(args)
  File "main.py", line 57, in train_and_validate
    loss.backward()
  File "/home/lenovo/anaconda3/envs/tfNLP/lib/python3.8/site-packages/torch/_tensor.py", line 396, in backward
    torch.autograd.backward(self, gradient, retain_graph, create_graph, inputs=inputs)
  File "/home/lenovo/anaconda3/envs/tfNLP/lib/python3.8/site-packages/torch/autograd/__init__.py", line 173, in backward
    Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
KeyboardInterrupt
