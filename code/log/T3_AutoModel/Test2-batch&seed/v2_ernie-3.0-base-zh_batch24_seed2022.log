2022-10-19 17:09:18 - INFO - Training/evaluation parameters: Namespace(adam_eps=1e-06, adam_lr=5e-05, base_url='../data/tnews_public/', bert_cache='../config/ernie-3.0-base-zh', bert_dim=768, bert_dir='nghuyong/ernie-3.0-base-zh', bert_max_length=512, bert_padding='max_length', best_score=0.5, ckpt_file='save/BD/v13/model_.bin', data_path='../data/Toursim3.csv', device='cuda', dropout=0.1, log_file='log/BD/v13.log', lstm_batch_first=True, lstm_bidirectional=True, lstm_dropout=0.0, lstm_hidden_size=256, lstm_input_size=768, lstm_num_layers=2, lstm_reflector_size=256, max_epochs=10, max_steps=50000, n_gpu=1, num_class=3, num_workers=6, prefetch=12, print_steps=10, savedmodel_path='save/BD/v13', seed=2022, smoothing=0.0, stopWords='../stopword/hit_stopwords.txt', train_batch_size=24, val_batch_size=24, val_ratio=0.2, warmup_steps=1000, weight_decay=0.001, word2Vec='../word2vec/sgns.weibo.bigram-char.bz2', word2Vec_dim=300)
Some weights of the model checkpoint at nghuyong/ernie-3.0-base-zh were not used when initializing ErnieModel: ['cls.predictions.transform.LayerNorm.weight', 'cls.predictions.transform.dense.bias', 'cls.predictions.transform.dense.weight', 'cls.predictions.transform.LayerNorm.bias', 'cls.predictions.bias']
- This IS expected if you are initializing ErnieModel from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing ErnieModel from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
2022-10-19 17:11:42 - INFO - Epoch 0 step 232: loss 0.435, {'accuracy': 0.8257, 'f1': 0.8102, 'precision': 0.8155, 'recall': 0.8257}
2022-10-19 17:13:59 - INFO - Epoch 1 step 464: loss 0.428, {'accuracy': 0.8271, 'f1': 0.821, 'precision': 0.8195, 'recall': 0.8271}
2022-10-19 17:16:17 - INFO - Epoch 2 step 696: loss 0.427, {'accuracy': 0.835, 'f1': 0.8279, 'precision': 0.8272, 'recall': 0.835}
2022-10-19 17:18:34 - INFO - Epoch 3 step 928: loss 0.499, {'accuracy': 0.8221, 'f1': 0.8221, 'precision': 0.8236, 'recall': 0.8221}
2022-10-19 17:20:51 - INFO - Epoch 4 step 1160: loss 0.552, {'accuracy': 0.8264, 'f1': 0.8151, 'precision': 0.8165, 'recall': 0.8264}
2022-10-19 17:23:09 - INFO - Epoch 5 step 1392: loss 0.602, {'accuracy': 0.8235, 'f1': 0.8241, 'precision': 0.8259, 'recall': 0.8235}
2022-10-19 17:25:26 - INFO - Epoch 6 step 1624: loss 0.597, {'accuracy': 0.8242, 'f1': 0.8199, 'precision': 0.8179, 'recall': 0.8242}
2022-10-19 17:27:44 - INFO - Epoch 7 step 1856: loss 0.709, {'accuracy': 0.8235, 'f1': 0.8217, 'precision': 0.8207, 'recall': 0.8235}
Traceback (most recent call last):
  File "main.py", line 99, in <module>
    main()
  File "main.py", line 96, in main
    train_and_validate(args)
  File "main.py", line 58, in train_and_validate
    optimizer.step()
  File "/home/lenovo/anaconda3/envs/tfNLP/lib/python3.8/site-packages/torch/optim/lr_scheduler.py", line 65, in wrapper
    return wrapped(*args, **kwargs)
  File "/home/lenovo/anaconda3/envs/tfNLP/lib/python3.8/site-packages/torch/optim/optimizer.py", line 109, in wrapper
    return func(*args, **kwargs)
  File "/home/lenovo/anaconda3/envs/tfNLP/lib/python3.8/site-packages/torch/autograd/grad_mode.py", line 27, in decorate_context
    return func(*args, **kwargs)
  File "/home/lenovo/anaconda3/envs/tfNLP/lib/python3.8/site-packages/torch/optim/adamw.py", line 161, in step
    adamw(params_with_grad,
  File "/home/lenovo/anaconda3/envs/tfNLP/lib/python3.8/site-packages/torch/optim/adamw.py", line 218, in adamw
    func(params,
  File "/home/lenovo/anaconda3/envs/tfNLP/lib/python3.8/site-packages/torch/optim/adamw.py", line 311, in _single_tensor_adamw
    denom = (exp_avg_sq.sqrt() / bias_correction2_sqrt).add_(eps)
KeyboardInterrupt
