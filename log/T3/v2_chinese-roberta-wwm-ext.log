2022-09-08 00:01:22 - INFO - Training/evaluation parameters: Namespace(adam_eps=1e-06, adam_lr=5e-05, base_url='../data/tnews_public/', bert_cache='../config/chinese-roberta-wwm-ext', bert_dim=768, bert_dir='hfl/chinese-roberta-wwm-ext', bert_max_length=512, bert_padding='max_length', best_score=0.5, ckpt_file='save/BD/v13/model_.bin', data_path='../data/Toursim3.csv', device='cuda', dropout=0.1, log_file='log/BD/v13.log', lstm_batch_first=True, lstm_bidirectional=True, lstm_dropout=0.0, lstm_hidden_size=256, lstm_input_size=768, lstm_num_layers=2, lstm_reflector_size=256, max_epochs=10, max_steps=50000, n_gpu=1, num_class=3, num_workers=6, prefetch=12, print_steps=10, savedmodel_path='save/BD/v13', seed=2021, smoothing=0.0, stopWords='../stopword/hit_stopwords.txt', train_batch_size=24, val_batch_size=24, val_ratio=0.2, warmup_steps=1000, weight_decay=0.001, word2Vec='../word2vec/sgns.weibo.bigram-char.bz2', word2Vec_dim=300)
Some weights of the model checkpoint at hfl/chinese-roberta-wwm-ext were not used when initializing BertModel: ['cls.predictions.transform.LayerNorm.weight', 'cls.predictions.transform.dense.weight', 'cls.predictions.bias', 'cls.predictions.transform.LayerNorm.bias', 'cls.predictions.transform.dense.bias', 'cls.predictions.decoder.weight', 'cls.seq_relationship.weight', 'cls.seq_relationship.bias']
- This IS expected if you are initializing BertModel from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing BertModel from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
2022-09-08 00:03:53 - INFO - Epoch 0 step 232: loss 0.448, {'accuracy': 0.8106, 'f1': 0.7893, 'precision': 0.8036, 'recall': 0.8106}
2022-09-08 00:06:11 - INFO - Epoch 1 step 464: loss 0.423, {'accuracy': 0.8278, 'f1': 0.8193, 'precision': 0.8191, 'recall': 0.8278}
2022-09-08 00:08:29 - INFO - Epoch 2 step 696: loss 0.496, {'accuracy': 0.8221, 'f1': 0.8152, 'precision': 0.8138, 'recall': 0.8221}
2022-09-08 00:10:47 - INFO - Epoch 3 step 928: loss 0.561, {'accuracy': 0.825, 'f1': 0.8195, 'precision': 0.8184, 'recall': 0.825}
Traceback (most recent call last):
  File "main.py", line 100, in <module>
    main()
  File "main.py", line 97, in main
    train_and_validate(args)
  File "main.py", line 55, in train_and_validate
    loss, accuracy, _, _, _ = model(batch)
  File "/home/lenovo/anaconda3/envs/tfNLP/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/lenovo/anaconda3/envs/tfNLP/lib/python3.8/site-packages/torch/nn/parallel/data_parallel.py", line 166, in forward
    return self.module(*inputs[0], **kwargs[0])
  File "/home/lenovo/anaconda3/envs/tfNLP/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/lenovo/wcProject/Bert_ABiLSTM_Att/Code_9.2/model.py", line 689, in forward
    bert_output = self.bert(inputs['input_ids'], attention_mask = inputs['attention_mask'], token_type_ids = inputs['token_type_ids'])
  File "/home/lenovo/anaconda3/envs/tfNLP/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/lenovo/anaconda3/envs/tfNLP/lib/python3.8/site-packages/transformers/models/bert/modeling_bert.py", line 1018, in forward
    encoder_outputs = self.encoder(
  File "/home/lenovo/anaconda3/envs/tfNLP/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/lenovo/anaconda3/envs/tfNLP/lib/python3.8/site-packages/transformers/models/bert/modeling_bert.py", line 607, in forward
    layer_outputs = layer_module(
  File "/home/lenovo/anaconda3/envs/tfNLP/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/lenovo/anaconda3/envs/tfNLP/lib/python3.8/site-packages/transformers/models/bert/modeling_bert.py", line 535, in forward
    layer_output = apply_chunking_to_forward(
  File "/home/lenovo/anaconda3/envs/tfNLP/lib/python3.8/site-packages/transformers/pytorch_utils.py", line 243, in apply_chunking_to_forward
    return forward_fn(*input_tensors)
  File "/home/lenovo/anaconda3/envs/tfNLP/lib/python3.8/site-packages/transformers/models/bert/modeling_bert.py", line 547, in feed_forward_chunk
    intermediate_output = self.intermediate(attention_output)
  File "/home/lenovo/anaconda3/envs/tfNLP/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/lenovo/anaconda3/envs/tfNLP/lib/python3.8/site-packages/transformers/models/bert/modeling_bert.py", line 447, in forward
    hidden_states = self.dense(hidden_states)
  File "/home/lenovo/anaconda3/envs/tfNLP/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/lenovo/anaconda3/envs/tfNLP/lib/python3.8/site-packages/torch/nn/modules/linear.py", line 114, in forward
    return F.linear(input, self.weight, self.bias)
KeyboardInterrupt
