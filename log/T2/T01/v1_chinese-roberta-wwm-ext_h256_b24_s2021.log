2022-11-21 15:16:09 - INFO - Training/evaluation parameters: Namespace(adam_eps=1e-06, adam_lr=5e-05, base_url='../data/tnews_public/', bert_cache='../config/hfl/chinese-roberta-wwm-ext', bert_dim=768, bert_dir='hfl/chinese-roberta-wwm-ext', bert_max_length=512, bert_padding='max_length', best_score=0.5, ckpt_file='save/BD/v13/model_.bin', data_path='../data/Toursim01.csv', device='cuda', dropout=0.1, log_file='log/BD/v13.log', lstm_batch_first=True, lstm_bidirectional=True, lstm_dropout=0.0, lstm_hidden_size=256, lstm_input_size=768, lstm_num_layers=2, lstm_reflector_size=256, max_epochs=10, max_steps=50000, n_gpu=1, num_class=2, num_workers=6, prefetch=12, print_steps=10, savedmodel_path='save/BD/v13', seed=2021, smoothing=0.0, stopWords='../stopword/hit_stopwords.txt', train_batch_size=24, val_batch_size=24, val_ratio=0.2, warmup_steps=200, weight_decay=0.001, word2Vec='../word2vec/sgns.weibo.bigram-char.bz2', word2Vec_dim=300)
Some weights of the model checkpoint at hfl/chinese-roberta-wwm-ext were not used when initializing BertModel: ['cls.predictions.decoder.weight', 'cls.seq_relationship.bias', 'cls.predictions.transform.dense.bias', 'cls.predictions.transform.LayerNorm.bias', 'cls.predictions.transform.LayerNorm.weight', 'cls.predictions.transform.dense.weight', 'cls.seq_relationship.weight', 'cls.predictions.bias']
- This IS expected if you are initializing BertModel from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing BertModel from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
2022-11-21 15:17:05 - INFO - Epoch 0 step 80: loss 0.206, {'accuracy': 0.9085, 'f1': 0.9082, 'precision': 0.908, 'recall': 0.9085}
2022-11-21 15:17:54 - INFO - Epoch 1 step 160: loss 0.167, {'accuracy': 0.9252, 'f1': 0.9254, 'precision': 0.9257, 'recall': 0.9252}
2022-11-21 15:18:42 - INFO - Epoch 2 step 240: loss 0.219, {'accuracy': 0.9085, 'f1': 0.9118, 'precision': 0.9212, 'recall': 0.9085}
2022-11-21 15:19:31 - INFO - Epoch 3 step 320: loss 0.205, {'accuracy': 0.9272, 'f1': 0.928, 'precision': 0.9293, 'recall': 0.9272}
2022-11-21 15:20:19 - INFO - Epoch 4 step 400: loss 0.255, {'accuracy': 0.9272, 'f1': 0.9274, 'precision': 0.9275, 'recall': 0.9272}
2022-11-21 15:21:08 - INFO - Epoch 5 step 480: loss 0.321, {'accuracy': 0.9293, 'f1': 0.9293, 'precision': 0.9293, 'recall': 0.9293}
Traceback (most recent call last):
  File "main.py", line 99, in <module>
    main()
  File "main.py", line 96, in main
    train_and_validate(args)
  File "main.py", line 54, in train_and_validate
    loss, accuracy, _, _, _ = model(batch)
  File "/home/lenovo/anaconda3/envs/tfNLP/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/lenovo/anaconda3/envs/tfNLP/lib/python3.8/site-packages/torch/nn/parallel/data_parallel.py", line 166, in forward
    return self.module(*inputs[0], **kwargs[0])
  File "/home/lenovo/anaconda3/envs/tfNLP/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/lenovo/wcProject/Bert_ABiLSTM_Att/Code_10.19/model.py", line 268, in forward
    bert_output = self.bert(inputs['input_ids'], attention_mask = inputs['attention_mask'], token_type_ids = inputs['token_type_ids'])
  File "/home/lenovo/anaconda3/envs/tfNLP/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/lenovo/anaconda3/envs/tfNLP/lib/python3.8/site-packages/transformers/models/bert/modeling_bert.py", line 1014, in forward
    encoder_outputs = self.encoder(
  File "/home/lenovo/anaconda3/envs/tfNLP/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/lenovo/anaconda3/envs/tfNLP/lib/python3.8/site-packages/transformers/models/bert/modeling_bert.py", line 603, in forward
    layer_outputs = layer_module(
  File "/home/lenovo/anaconda3/envs/tfNLP/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/lenovo/anaconda3/envs/tfNLP/lib/python3.8/site-packages/transformers/models/bert/modeling_bert.py", line 531, in forward
    layer_output = apply_chunking_to_forward(
  File "/home/lenovo/anaconda3/envs/tfNLP/lib/python3.8/site-packages/transformers/pytorch_utils.py", line 246, in apply_chunking_to_forward
    return forward_fn(*input_tensors)
  File "/home/lenovo/anaconda3/envs/tfNLP/lib/python3.8/site-packages/transformers/models/bert/modeling_bert.py", line 544, in feed_forward_chunk
    layer_output = self.output(intermediate_output, attention_output)
  File "/home/lenovo/anaconda3/envs/tfNLP/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1194, in __getattr__
    def __getattr__(self, name: str) -> Union[Tensor, 'Module']:
KeyboardInterrupt
