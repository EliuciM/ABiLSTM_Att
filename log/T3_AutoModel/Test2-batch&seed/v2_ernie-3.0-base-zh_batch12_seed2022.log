2022-10-19 15:55:37 - INFO - Training/evaluation parameters: Namespace(adam_eps=1e-06, adam_lr=5e-05, base_url='../data/tnews_public/', bert_cache='../config/ernie-3.0-base-zh', bert_dim=768, bert_dir='nghuyong/ernie-3.0-base-zh', bert_max_length=512, bert_padding='max_length', best_score=0.5, ckpt_file='save/BD/v13/model_.bin', data_path='../data/Toursim3.csv', device='cuda', dropout=0.1, log_file='log/BD/v13.log', lstm_batch_first=True, lstm_bidirectional=True, lstm_dropout=0.0, lstm_hidden_size=256, lstm_input_size=768, lstm_num_layers=2, lstm_reflector_size=256, max_epochs=10, max_steps=50000, n_gpu=1, num_class=3, num_workers=6, prefetch=12, print_steps=10, savedmodel_path='save/BD/v13', seed=2022, smoothing=0.0, stopWords='../stopword/hit_stopwords.txt', train_batch_size=12, val_batch_size=12, val_ratio=0.2, warmup_steps=1000, weight_decay=0.001, word2Vec='../word2vec/sgns.weibo.bigram-char.bz2', word2Vec_dim=300)
Some weights of the model checkpoint at nghuyong/ernie-3.0-base-zh were not used when initializing ErnieModel: ['cls.predictions.transform.LayerNorm.weight', 'cls.predictions.transform.dense.weight', 'cls.predictions.transform.LayerNorm.bias', 'cls.predictions.transform.dense.bias', 'cls.predictions.bias']
- This IS expected if you are initializing ErnieModel from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing ErnieModel from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
2022-10-19 15:58:13 - INFO - Epoch 0 step 464: loss 0.448, {'accuracy': 0.8214, 'f1': 0.8211, 'precision': 0.8224, 'recall': 0.8214}
2022-10-19 16:00:41 - INFO - Epoch 1 step 928: loss 0.422, {'accuracy': 0.8185, 'f1': 0.7998, 'precision': 0.8085, 'recall': 0.8185}
2022-10-19 16:03:10 - INFO - Epoch 2 step 1392: loss 0.451, {'accuracy': 0.8336, 'f1': 0.8243, 'precision': 0.8248, 'recall': 0.8336}
2022-10-19 16:05:37 - INFO - Epoch 3 step 1856: loss 0.554, {'accuracy': 0.7941, 'f1': 0.8037, 'precision': 0.832, 'recall': 0.7941}
2022-10-19 16:08:06 - INFO - Epoch 4 step 2320: loss 0.544, {'accuracy': 0.8178, 'f1': 0.8029, 'precision': 0.8064, 'recall': 0.8178}
/home/lenovo/anaconda3/envs/tfNLP/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1334: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2022-10-19 16:10:34 - INFO - Epoch 5 step 2784: loss 0.839, {'accuracy': 0.6628, 'f1': 0.5284, 'precision': 0.4394, 'recall': 0.6628}
/home/lenovo/anaconda3/envs/tfNLP/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1334: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2022-10-19 16:13:02 - INFO - Epoch 6 step 3248: loss 0.840, {'accuracy': 0.6628, 'f1': 0.5284, 'precision': 0.4394, 'recall': 0.6628}
/home/lenovo/anaconda3/envs/tfNLP/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1334: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2022-10-19 16:15:30 - INFO - Epoch 7 step 3712: loss 0.839, {'accuracy': 0.6628, 'f1': 0.5284, 'precision': 0.4394, 'recall': 0.6628}
Traceback (most recent call last):
  File "main.py", line 99, in <module>
    main()
  File "main.py", line 96, in main
    train_and_validate(args)
  File "main.py", line 57, in train_and_validate
    loss.backward()
  File "/home/lenovo/anaconda3/envs/tfNLP/lib/python3.8/site-packages/torch/_tensor.py", line 396, in backward
    torch.autograd.backward(self, gradient, retain_graph, create_graph, inputs=inputs)
  File "/home/lenovo/anaconda3/envs/tfNLP/lib/python3.8/site-packages/torch/autograd/__init__.py", line 173, in backward
    Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
KeyboardInterrupt
