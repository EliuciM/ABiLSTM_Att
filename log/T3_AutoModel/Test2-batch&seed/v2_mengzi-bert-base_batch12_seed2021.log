2022-10-18 22:25:07 - INFO - Training/evaluation parameters: Namespace(adam_eps=1e-06, adam_lr=5e-05, base_url='../data/tnews_public/', bert_cache='../config/mengzi-bert-base', bert_dim=768, bert_dir='Langboat/mengzi-bert-base', bert_max_length=512, bert_padding='max_length', best_score=0.5, ckpt_file='save/BD/v13/model_.bin', data_path='../data/Toursim3.csv', device='cuda', dropout=0.1, log_file='log/BD/v13.log', lstm_batch_first=True, lstm_bidirectional=True, lstm_dropout=0.0, lstm_hidden_size=256, lstm_input_size=768, lstm_num_layers=2, lstm_reflector_size=256, max_epochs=10, max_steps=50000, n_gpu=1, num_class=3, num_workers=6, prefetch=12, print_steps=10, savedmodel_path='save/BD/v13', seed=2021, smoothing=0.0, stopWords='../stopword/hit_stopwords.txt', train_batch_size=12, val_batch_size=12, val_ratio=0.2, warmup_steps=1000, weight_decay=0.001, word2Vec='../word2vec/sgns.weibo.bigram-char.bz2', word2Vec_dim=300)
Some weights of the model checkpoint at Langboat/mengzi-bert-base were not used when initializing BertModel: ['cls.predictions.decoder.bias', 'cls.predictions.decoder.weight', 'cls.predictions.transform.LayerNorm.bias', 'cls.predictions.transform.dense.bias', 'cls.predictions.transform.LayerNorm.weight', 'sop.cls.weight', 'sop.cls.bias', 'cls.predictions.transform.dense.weight', 'cls.predictions.bias']
- This IS expected if you are initializing BertModel from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing BertModel from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
2022-10-18 22:27:47 - INFO - Epoch 0 step 464: loss 0.432, {'accuracy': 0.8192, 'f1': 0.8079, 'precision': 0.8095, 'recall': 0.8192}
2022-10-18 22:30:16 - INFO - Epoch 1 step 928: loss 0.466, {'accuracy': 0.8271, 'f1': 0.8166, 'precision': 0.8181, 'recall': 0.8271}
2022-10-18 22:32:44 - INFO - Epoch 2 step 1392: loss 0.530, {'accuracy': 0.8171, 'f1': 0.8123, 'precision': 0.8114, 'recall': 0.8171}
2022-10-18 22:35:11 - INFO - Epoch 3 step 1856: loss 0.524, {'accuracy': 0.8092, 'f1': 0.7998, 'precision': 0.7985, 'recall': 0.8092}
Traceback (most recent call last):
  File "main.py", line 99, in <module>
    main()
  File "main.py", line 96, in main
    train_and_validate(args)
  File "main.py", line 54, in train_and_validate
    loss, accuracy, _, _, _ = model(batch)
  File "/home/lenovo/anaconda3/envs/tfNLP/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/lenovo/anaconda3/envs/tfNLP/lib/python3.8/site-packages/torch/nn/parallel/data_parallel.py", line 152, in forward
    for t in chain(self.module.parameters(), self.module.buffers()):
  File "/home/lenovo/anaconda3/envs/tfNLP/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1690, in buffers
    for _, buf in self.named_buffers(recurse=recurse):
  File "/home/lenovo/anaconda3/envs/tfNLP/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1716, in named_buffers
    for elem in gen:
  File "/home/lenovo/anaconda3/envs/tfNLP/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1612, in _named_members
    for module_prefix, module in modules:
  File "/home/lenovo/anaconda3/envs/tfNLP/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1817, in named_modules
    for m in module.named_modules(memo, submodule_prefix, remove_duplicate):
  File "/home/lenovo/anaconda3/envs/tfNLP/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1817, in named_modules
    for m in module.named_modules(memo, submodule_prefix, remove_duplicate):
  File "/home/lenovo/anaconda3/envs/tfNLP/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1817, in named_modules
    for m in module.named_modules(memo, submodule_prefix, remove_duplicate):
  [Previous line repeated 2 more times]
  File "/home/lenovo/anaconda3/envs/tfNLP/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1816, in named_modules
    submodule_prefix = prefix + ('.' if prefix else '') + name
KeyboardInterrupt
