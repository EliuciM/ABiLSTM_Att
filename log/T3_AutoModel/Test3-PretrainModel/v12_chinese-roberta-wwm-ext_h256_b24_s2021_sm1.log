2022-11-18 13:17:35 - INFO - Training/evaluation parameters: Namespace(adam_eps=1e-06, adam_lr=5e-05, base_url='../data/tnews_public/', bert_cache='../config/hfl/chinese-roberta-wwm-ext', bert_dim=768, bert_dir='hfl/chinese-roberta-wwm-ext', bert_max_length=512, bert_padding='max_length', best_score=0.5, ckpt_file='save/BD/v13/model_.bin', data_path='../data/Toursim3.csv', device='cuda', dropout=0.1, log_file='log/BD/v13.log', lstm_batch_first=True, lstm_bidirectional=True, lstm_dropout=0.0, lstm_hidden_size=256, lstm_input_size=768, lstm_num_layers=2, lstm_reflector_size=256, max_epochs=10, max_steps=50000, n_gpu=1, num_class=3, num_workers=6, prefetch=12, print_steps=10, savedmodel_path='save/BD/v13', seed=2021, smoothing=0.1, stopWords='../stopword/hit_stopwords.txt', train_batch_size=24, val_batch_size=24, val_ratio=0.2, warmup_steps=1000, weight_decay=0.001, word2Vec='../word2vec/sgns.weibo.bigram-char.bz2', word2Vec_dim=300)
Some weights of the model checkpoint at hfl/chinese-roberta-wwm-ext were not used when initializing BertModel: ['cls.seq_relationship.weight', 'cls.predictions.transform.dense.bias', 'cls.predictions.transform.dense.weight', 'cls.predictions.bias', 'cls.predictions.transform.LayerNorm.weight', 'cls.seq_relationship.bias', 'cls.predictions.decoder.weight', 'cls.predictions.transform.LayerNorm.bias']
- This IS expected if you are initializing BertModel from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing BertModel from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
2022-11-18 13:20:18 - INFO - Epoch 0 step 232: loss 0.296, {'accuracy': 0.8121, 'f1': 0.8048, 'precision': 0.8083, 'recall': 0.8121}
2022-11-18 13:22:54 - INFO - Epoch 1 step 464: loss 0.277, {'accuracy': 0.8077, 'f1': 0.8072, 'precision': 0.8097, 'recall': 0.8077}
2022-11-18 13:25:30 - INFO - Epoch 2 step 696: loss 0.299, {'accuracy': 0.8135, 'f1': 0.7933, 'precision': 0.806, 'recall': 0.8135}
2022-11-18 13:28:06 - INFO - Epoch 3 step 928: loss 0.321, {'accuracy': 0.8128, 'f1': 0.8085, 'precision': 0.8069, 'recall': 0.8128}
2022-11-18 13:30:43 - INFO - Epoch 4 step 1160: loss 0.346, {'accuracy': 0.8142, 'f1': 0.8007, 'precision': 0.8036, 'recall': 0.8142}
2022-11-18 13:33:20 - INFO - Epoch 5 step 1392: loss 0.364, {'accuracy': 0.8113, 'f1': 0.8067, 'precision': 0.8043, 'recall': 0.8113}
2022-11-18 13:35:56 - INFO - Epoch 6 step 1624: loss 0.359, {'accuracy': 0.8221, 'f1': 0.8194, 'precision': 0.818, 'recall': 0.8221}
Traceback (most recent call last):
  File "main.py", line 99, in <module>
    main()
  File "main.py", line 96, in main
    train_and_validate(args)
  File "main.py", line 71, in train_and_validate
    loss, results = validate(model, val_dataloader)
  File "main.py", line 17, in validate
    loss, _, pred_label_id, label, _ = model(batch)
  File "/home/lenovo/anaconda3/envs/tfNLP/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/lenovo/anaconda3/envs/tfNLP/lib/python3.8/site-packages/torch/nn/parallel/data_parallel.py", line 166, in forward
    return self.module(*inputs[0], **kwargs[0])
  File "/home/lenovo/anaconda3/envs/tfNLP/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/lenovo/wcProject/Bert_ABiLSTM_Att/Code_10.19/model.py", line 154, in forward
    bert_output = self.bert(inputs['input_ids'], attention_mask = inputs['attention_mask'], token_type_ids = inputs['token_type_ids'])
  File "/home/lenovo/anaconda3/envs/tfNLP/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/lenovo/anaconda3/envs/tfNLP/lib/python3.8/site-packages/transformers/models/bert/modeling_bert.py", line 1014, in forward
    encoder_outputs = self.encoder(
  File "/home/lenovo/anaconda3/envs/tfNLP/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/lenovo/anaconda3/envs/tfNLP/lib/python3.8/site-packages/transformers/models/bert/modeling_bert.py", line 603, in forward
    layer_outputs = layer_module(
  File "/home/lenovo/anaconda3/envs/tfNLP/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/lenovo/anaconda3/envs/tfNLP/lib/python3.8/site-packages/transformers/models/bert/modeling_bert.py", line 489, in forward
    self_attention_outputs = self.attention(
  File "/home/lenovo/anaconda3/envs/tfNLP/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/lenovo/anaconda3/envs/tfNLP/lib/python3.8/site-packages/transformers/models/bert/modeling_bert.py", line 428, in forward
    attention_output = self.output(self_outputs[0], hidden_states)
  File "/home/lenovo/anaconda3/envs/tfNLP/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/lenovo/anaconda3/envs/tfNLP/lib/python3.8/site-packages/transformers/models/bert/modeling_bert.py", line 380, in forward
    hidden_states = self.LayerNorm(hidden_states + input_tensor)
KeyboardInterrupt
