2022-09-18 10:27:30 - INFO - Training/evaluation parameters: Namespace(adam_eps=1e-06, adam_lr=5e-05, base_url='../data/tnews_public/', bert_cache='../config/mengzi-bert-base', bert_dim=768, bert_dir='Langboat/mengzi-bert-base', bert_max_length=512, bert_padding='max_length', best_score=0.5, ckpt_file='save/BD/v13/model_.bin', data_path='../data/Toursim3.csv', device='cuda', dropout=0.1, log_file='log/BD/v13.log', lstm_batch_first=True, lstm_bidirectional=True, lstm_dropout=0.0, lstm_hidden_size=768, lstm_input_size=768, lstm_num_layers=2, lstm_reflector_size=256, max_epochs=10, max_steps=50000, n_gpu=1, num_class=3, num_workers=6, prefetch=12, print_steps=10, savedmodel_path='save/BD/v13', seed=2021, smoothing=0.0, stopWords='../stopword/hit_stopwords.txt', train_batch_size=12, val_batch_size=12, val_ratio=0.2, warmup_steps=1000, weight_decay=0.001, word2Vec='../word2vec/sgns.weibo.bigram-char.bz2', word2Vec_dim=300)
Some weights of the model checkpoint at Langboat/mengzi-bert-base were not used when initializing BertModel: ['cls.predictions.transform.LayerNorm.weight', 'cls.predictions.transform.LayerNorm.bias', 'cls.predictions.decoder.bias', 'cls.predictions.decoder.weight', 'sop.cls.bias', 'sop.cls.weight', 'cls.predictions.transform.dense.bias', 'cls.predictions.bias', 'cls.predictions.transform.dense.weight']
- This IS expected if you are initializing BertModel from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing BertModel from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
2022-09-18 10:32:13 - INFO - Epoch 0 step 464: loss 0.818, {'accuracy': 0.6686, 'f1': 0.55, 'precision': 0.5981, 'recall': 0.6686}
2022-09-18 10:36:44 - INFO - Epoch 1 step 928: loss 0.821, {'accuracy': 0.6643, 'f1': 0.5324, 'precision': 0.5222, 'recall': 0.6643}
/home/lenovo/anaconda3/envs/tfNLP/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1334: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2022-09-18 10:41:15 - INFO - Epoch 2 step 1392: loss 0.809, {'accuracy': 0.6679, 'f1': 0.5376, 'precision': 0.5231, 'recall': 0.6679}
2022-09-18 10:45:46 - INFO - Epoch 3 step 1856: loss 0.700, {'accuracy': 0.7109, 'f1': 0.6364, 'precision': 0.6641, 'recall': 0.7109}
2022-09-18 10:50:18 - INFO - Epoch 4 step 2320: loss 0.446, {'accuracy': 0.8149, 'f1': 0.8016, 'precision': 0.8053, 'recall': 0.8149}
2022-09-18 10:54:48 - INFO - Epoch 5 step 2784: loss 0.441, {'accuracy': 0.8257, 'f1': 0.823, 'precision': 0.8216, 'recall': 0.8257}
Traceback (most recent call last):
  File "main.py", line 100, in <module>
    main()
  File "main.py", line 97, in main
    train_and_validate(args)
  File "main.py", line 56, in train_and_validate
    loss_adv = smart_adv.forward(model,logits,batch)
  File "/home/lenovo/wcProject/Bert_ABiLSTM_Att/Code_9.2/utils.py", line 429, in forward
    if (torch.isnan(norm) or torch.isinf(norm)):
KeyboardInterrupt
